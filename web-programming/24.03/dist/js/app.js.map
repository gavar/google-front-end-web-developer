{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","icons","Component","props","_classCallCheck","this","events","document","createDocumentFragment","assign","repaint","bind","state","initialState","componentWillMount","render","componentDidMount","next","prev","dirty","setTimeout","type","listener","options","addEventListener","evt","dispatchEvent","removeEventListener","store","moves","stars","GAME_OVER","Event","CLASSES","MemoryGame","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","delay","deck","onDeckClick","restart","onRestartClick","style","display","visible","innerText","toString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cards","Symbol","iterator","done","card","status","element","classList","add","remove","apply","err","return","length","pop","_this2","setState","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","createElement","icon","appendChild","push","shows","cloneNode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_i","_element","_icon","array","t","Math","floor","random","shuffle","fragment","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_card","_fragment","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_star","mistakes","countOf","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","count","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","setStatusOf","_this3","cardOf","selections","hasMatch","onSucessfulMatch","onMatchFailure","indexes","first","firstElementChild","className","_this4","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","index","isGameOver","_this5","isAnyShownPreviously","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","calculateStars","deleteStatusByIndexes","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","console","log","e","target","HTMLLIElement","onSelectListElement","GameOver","_this6","game","onGameOver","onPlayAgainClick","view","querySelector"],"mappings":"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","file":"js/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const icons: string[] = [\r\n    \"anchor\",\r\n    \"bicycle\",\r\n    \"bolt\",\r\n    \"bomb\",\r\n    \"cube\",\r\n    \"diamond\",\r\n    \"leaf\",\r\n    \"paper-plane-o\",\r\n];\r\n\r\nfunction shuffle<T>(array: Array<T>): Array<T> {\r\n    let t: T;\r\n    let r: number;\r\n    for (let i = array.length - 1; i >= 0; i--) {\r\n        r = Math.floor(Math.random() * i);\r\n        t = array[i];\r\n        array[i] = array[r];\r\n        array[r] = t;\r\n    }\r\n    return array;\r\n}\r\n\r\nabstract class Component<P, S> implements EventTarget {\r\n\r\n    private readonly events: EventTarget;\r\n    private readonly props: Readonly<P>;\r\n    private readonly state: Readonly<S>;\r\n\r\n    private dirty: boolean;\r\n\r\n    protected constructor(props: P) {\r\n        this.events = document.createDocumentFragment();\r\n\r\n        // setup\r\n        this.props = Object.assign({}, props);\r\n        this.repaint = this.repaint.bind(this);\r\n\r\n        // state\r\n        this.state = this.initialState();\r\n\r\n        // mount\r\n        this.componentWillMount(this.props, this.state);\r\n        this.render(this.props, this.state);\r\n        this.componentDidMount(this.props, this.state);\r\n    }\r\n\r\n    /**\r\n     * Set next state of the component to render.\r\n     * @param next - function that returns next state of the component.\r\n     */\r\n    setState(next: (prev?: S, props?: P) => Partial<S> | void);\r\n\r\n    /**\r\n     * Set next state of the component to render.\r\n     * @param next - next state value.\r\n     */\r\n    setState(next: Partial<S>);\r\n\r\n    setState(next) {\r\n\r\n        const prev = this.state;\r\n        const props = this.props;\r\n\r\n        if (typeof next == \"function\")\r\n            next = next(prev, props) || prev;\r\n\r\n        Object.assign(this.state, next);\r\n        if (this.dirty) return;\r\n        this.dirty = true;\r\n        setTimeout(this.repaint, 0);\r\n    }\r\n\r\n    /** Render state of the component. */\r\n    abstract render(props?: Readonly<P>, state?: Readonly<S>);\r\n\r\n    /** @inheritDoc */\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject | null, options?: boolean | AddEventListenerOptions): void {\r\n        this.events.addEventListener(type, listener, options);\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    dispatchEvent(evt: Event): boolean {\r\n        return this.events.dispatchEvent(evt);\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    removeEventListener(type: string, listener?: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void {\r\n        this.events.removeEventListener(type, listener, options);\r\n    }\r\n\r\n    /** Called immediately before mounting occurs, and before {@link Component#render}. */\r\n    protected componentWillMount(props?: Readonly<P>, state?: Readonly<S>) { }\r\n\r\n    /** Called immediately after a component is mounted. */\r\n    protected componentDidMount(props?: Readonly<P>, state?: Readonly<S>) { }\r\n\r\n    /** Get initial state of the component. */\r\n    protected initialState(): S {\r\n        return {} as S;\r\n    }\r\n\r\n    private repaint() {\r\n        this.dirty = false;\r\n        this.render(this.props, this.state);\r\n    }\r\n}\r\n\r\ninterface ApplicationState {\r\n    moves: number;\r\n    stars: number;\r\n}\r\n\r\nconst store: ApplicationState = {\r\n    moves: 0,\r\n    stars: 3,\r\n};\r\n\r\n// cheats\r\nconst QUICK_WIN = false;\r\n\r\ninterface MemoryGameProps {\r\n    deck: HTMLElement;\r\n    moves: HTMLElement;\r\n    stars: HTMLElement;\r\n    restart: HTMLElement;\r\n}\r\n\r\nconst GAME_OVER = new Event(\"game-over\");\r\n\r\nconst CORRECT = \"correct\";\r\nconst INCORRECT = \"incorrect\";\r\nconst SELECTION = \"selection\";\r\ntype MemoryGameCardStatus = \"selection\" | \"correct\" | \"incorrect\";\r\n\r\ninterface MemoryGameCard {\r\n    shows: number;\r\n    element: HTMLElement;\r\n    status?: MemoryGameCardStatus,\r\n}\r\n\r\ninterface MemoryGameState {\r\n    visible: boolean;\r\n    mistakes: number;\r\n    stars: HTMLElement[],\r\n    cards: MemoryGameCard[],\r\n}\r\n\r\nconst CLASSES = [\r\n    \"open\",\r\n    \"show\",\r\n    \"match\",\r\n    \"wrong\",\r\n];\r\n\r\nclass MemoryGame extends Component<MemoryGameProps, MemoryGameState> {\r\n\r\n    private readonly delay: number = 1000;\r\n\r\n    constructor(props: MemoryGameProps) {\r\n        super(props);\r\n\r\n        // events\r\n        props.deck.addEventListener(\"click\", this.onDeckClick.bind(this));\r\n        props.restart.addEventListener(\"click\", this.onRestartClick.bind(this));\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public render(props: Readonly<MemoryGameProps>, state: Readonly<MemoryGameState>) {\r\n\r\n        props.deck.style.display = state.visible ? null : \"none\";\r\n        props.moves.innerText = store.moves.toString();\r\n\r\n        // update cards\r\n        for (const card of state.cards) {\r\n            switch (card.status) {\r\n                case CORRECT:\r\n                    card.element.classList.add(\"show\", \"match\");\r\n                    break;\r\n\r\n                case SELECTION:\r\n                    card.element.classList.add(\"show\", \"open\");\r\n                    break;\r\n\r\n                case INCORRECT:\r\n                    card.element.classList.add(\"show\", \"open\", \"wrong\");\r\n                    break;\r\n\r\n                default:\r\n                    card.element.classList.remove.apply(card.element.classList, CLASSES);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // update stars\r\n        while (state.stars.length > store.stars)\r\n            state.stars.pop().remove();\r\n    }\r\n\r\n    /** Restart the game. */\r\n    public restart() {\r\n\r\n        // reset application state\r\n        store.moves = 0;\r\n        store.stars = 3;\r\n\r\n        this.setState((state, props) => {\r\n\r\n            // default state\r\n            const next = this.initialState();\r\n\r\n            // remove previous cards\r\n            for (const card of state.cards)\r\n                card.element.remove();\r\n\r\n            // create cards\r\n            for (let i = 0; i < icons.length; i++) {\r\n                const element = document.createElement(\"li\");\r\n                element.classList.add(\"card\");\r\n\r\n                const icon = document.createElement(\"i\");\r\n                icon.classList.add(\"fa\", `fa-${icons[i]}`);\r\n                element.appendChild(icon);\r\n\r\n                next.cards.push(\r\n                    {shows: 0, element: element},\r\n                    {shows: 0, element: element.cloneNode(true) as HTMLElement},\r\n                );\r\n            }\r\n\r\n            // remove previous stars\r\n            for (const star of state.stars)\r\n                star.remove();\r\n\r\n            // create stars\r\n            for (let i = 0; i < store.stars; i++) {\r\n                const element = document.createElement(\"li\");\r\n                const icon = document.createElement(\"i\");\r\n                icon.classList.add(\"fa\", `fa-star`);\r\n                element.appendChild(icon);\r\n                next.stars.push(element);\r\n            }\r\n\r\n            // quick win\r\n            if (QUICK_WIN) {\r\n                for (let i = next.cards.length - 3; i >= 0; i--) {\r\n                    next.cards[i].status = CORRECT;\r\n                }\r\n            }\r\n\r\n            // shuffle\r\n            shuffle(next.cards);\r\n\r\n            // attach cards to the document\r\n            {\r\n                const fragment = document.createDocumentFragment();\r\n                for (const card of next.cards) fragment.appendChild(card.element);\r\n                props.deck.appendChild(fragment);\r\n            }\r\n\r\n            // attach stars to the document\r\n            {\r\n                const fragment = document.createDocumentFragment();\r\n                for (const star of next.stars) fragment.appendChild(star);\r\n                props.stars.appendChild(fragment);\r\n            }\r\n\r\n            return next;\r\n        });\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    protected componentWillMount() {\r\n        this.restart();\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    protected initialState(): MemoryGameState {\r\n        return {\r\n            visible: true,\r\n            mistakes: 0,\r\n            stars: [],\r\n            cards: [],\r\n        };\r\n    }\r\n\r\n    private isGameOver(state: MemoryGameState) {\r\n        return this.countOf(state.cards, CORRECT) === state.cards.length;\r\n    }\r\n\r\n    private cardOf(cards: MemoryGameCard[], element: HTMLLIElement): MemoryGameCard {\r\n        for (const card of cards)\r\n            if (card.element === element)\r\n                return card;\r\n    }\r\n\r\n    private countOf(cards: MemoryGameCard[], status: MemoryGameCardStatus): number {\r\n        let count = 0;\r\n        for (let i = 0; i < cards.length; i++)\r\n            if (cards[i].status === status)\r\n                count++;\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Modify status of the cards which have given status.\r\n     * @param status - status to change.\r\n     * @param next - status to set.\r\n     */\r\n    private setStatusOf(status: MemoryGameCardStatus, next: MemoryGameCardStatus) {\r\n        this.setState(state => {\r\n            for (const card of state.cards)\r\n                if (card.status === status)\r\n                    card.status = next;\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set status of the cards with {@link SELECTION} status.\r\n     * @param status - status to set.\r\n     */\r\n    private setStatusOfSelections(status: MemoryGameCardStatus) {\r\n        this.setStatusOf(SELECTION, status);\r\n    }\r\n\r\n    private onSelectListElement(element: HTMLLIElement) {\r\n        this.setState(state => {\r\n\r\n            // check if card already selected or correct\r\n            const card = this.cardOf(state.cards, element);\r\n            switch (card.status) {\r\n                case SELECTION:\r\n                case CORRECT:\r\n                    return;\r\n            }\r\n\r\n            // max active selections\r\n            if (this.countOf(state.cards, SELECTION) > 1)\r\n                return;\r\n\r\n            // set card as active\r\n            card.status = SELECTION;\r\n            card.shows++;\r\n\r\n            const selections = [];\r\n            for (let i = 0; i < state.cards.length; i++)\r\n                if (state.cards[i].status == SELECTION)\r\n                    selections.push(i);\r\n\r\n            // decide if correct selections\r\n            if (selections.length > 1) {\r\n                store.moves++;\r\n                const match = this.hasMatch(state, selections);\r\n                if (match) this.onSucessfulMatch(selections);\r\n                else this.onMatchFailure(selections);\r\n            }\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    private hasMatch(state: MemoryGameState, indexes: number[]) {\r\n        if (indexes.length < 1)\r\n            return false;\r\n\r\n        const first = state.cards[indexes[0]].element.firstElementChild;\r\n        for (let i = 1; i < indexes.length; i++) {\r\n            const icon = state.cards[indexes[i]].element.firstElementChild;\r\n            if (first.className != icon.className)\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private onSucessfulMatch(indexes: number[]) {\r\n        this.setState(state => {\r\n            // update status\r\n            for (const index of indexes) {\r\n                state.cards[index].status = CORRECT;\r\n            }\r\n            // game over?\r\n            if (this.isGameOver(state))\r\n                this.dispatchEvent(GAME_OVER);\r\n        });\r\n    }\r\n\r\n    private onMatchFailure(indexes: number[]) {\r\n        this.setState(state => {\r\n            let isAnyShownPreviously = false;\r\n\r\n            // update status\r\n            for (const index of indexes) {\r\n                const card = state.cards[index];\r\n                if (card.shows > 1) isAnyShownPreviously = true;\r\n                card.status = INCORRECT;\r\n            }\r\n\r\n            // check if made mistake\r\n            if (isAnyShownPreviously)\r\n                state.mistakes++;\r\n\r\n            // update stars\r\n            store.stars = this.calculateStars(state.mistakes);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.deleteStatusByIndexes(indexes);\r\n        }, this.delay);\r\n    }\r\n\r\n    private deleteStatusByIndexes(indexes: number[]) {\r\n        this.setState((state) => {\r\n            for (const index of indexes) {\r\n                delete state.cards[index].status;\r\n            }\r\n        });\r\n    }\r\n\r\n    private calculateStars(mistakes: number): number {\r\n        console.log(\"moves:\", store.moves, \"mistakes:\", mistakes);\r\n        // convert mistakes to stars\r\n        if (mistakes < 3) return 3; // less then 3 mistakes\r\n        if (mistakes < 6) return 2; // from 3 to 5 mistakes\r\n        return 1; // more then 5 mistakes\r\n    }\r\n\r\n    private onDeckClick(e: MouseEvent) {\r\n        if (e.target instanceof HTMLLIElement)\r\n            this.onSelectListElement(e.target);\r\n    }\r\n\r\n    private onRestartClick() {\r\n        this.restart();\r\n    }\r\n}\r\n\r\ninterface GameOverProps {\r\n    view: HTMLElement;\r\n    game: MemoryGame;\r\n    moves: HTMLElement;\r\n    stars: HTMLElement;\r\n    restart: HTMLElement;\r\n}\r\n\r\ninterface GameOverState {\r\n    visible: boolean;\r\n}\r\n\r\nclass GameOver extends Component<GameOverProps, GameOverState> {\r\n\r\n    constructor(props: GameOverProps) {\r\n        super(props);\r\n        props.game.addEventListener(\"game-over\", this.onGameOver.bind(this));\r\n        props.restart.addEventListener(\"click\", this.onPlayAgainClick.bind(this));\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    render(props?: Readonly<GameOverProps>, state?: Readonly<GameOverState>) {\r\n        props.moves.innerText = store.moves.toString();\r\n        props.stars.innerText = store.stars.toString();\r\n\r\n        switch (state.visible) {\r\n            case true:\r\n                props.view.classList.add(\"show\");\r\n                break;\r\n            case false:\r\n                props.view.classList.remove(\"show\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    protected initialState(): GameOverState {\r\n        return {\r\n            visible: undefined,\r\n        };\r\n    }\r\n\r\n    private onGameOver() {\r\n        this.setState({visible: true});\r\n    }\r\n\r\n    private onPlayAgainClick() {\r\n        this.setState((state, props) => {\r\n            state.visible = false;\r\n            props.game.restart();\r\n            return state;\r\n        });\r\n    }\r\n}\r\n\r\n// RUN GAME\r\nconst memoryGame = new MemoryGame({\r\n    deck: document.querySelector<HTMLUListElement>(\".game .deck\"),\r\n    moves: document.querySelector<HTMLElement>(\".game .moves\"),\r\n    stars: document.querySelector<HTMLElement>(\".game .stars\"),\r\n    restart: document.querySelector<HTMLElement>(\".game .restart\"),\r\n});\r\n\r\nconst gameOver = new GameOver({\r\n    game: memoryGame,\r\n    view: document.querySelector<HTMLElement>(\".game-over\"),\r\n    moves: document.querySelector<HTMLElement>(\".game-over .moves\"),\r\n    stars: document.querySelector<HTMLElement>(\".game-over .stars\"),\r\n    restart: document.querySelector<HTMLElement>(\".game-over .restart\"),\r\n});\r\n"],"sourceRoot":""}